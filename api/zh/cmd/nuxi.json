{"name":"nuxi","nameInCMD":"npx nuxi","desc":"Nuxt CLI（别名Nuxi）为轻松构建Nuxt项目提供了无依赖的体验。","usages":[{"name":"init","nameInCMD":"npx nuxi init","desc":"init命令使用unjs/giget初始化一个全新的Nuxt项目。","form":{"--template":{"name":"模板","desc":"指定要用作模板的模板名称或git存储库。格式是gh:org/name以使用自定义的github模板。","type":"string","optionName":"--template"},"--force":{"name":"强制克隆到任何现有目录。","type":"check","optionName":"--force"},"--offline":{"name":"不尝试从github下载，仅使用本地缓存。","type":"check","optionName":"--offline"},"--prefer-offline":{"name":"首先尝试本地缓存以下载模板。","type":"check","optionName":"--prefer-offline"},"--shell":{"name":"在克隆的目录中打开shell（实验性的）。","type":"check","optionName":"--shell"}}},{"name":"add","nameInCMD":"npx nuxi add","desc":"快速添加组件、页面和插件到您的Nuxt项目。","form":{"template":{"name":"模板","type":"select","required":true,"options":[{"value":"component","name":"组件"},{"value":"composable","name":"组合"},{"value":"layout","name":"布局"},{"value":"plugin","name":"插件"},{"value":"page","name":"页面"},{"value":"middleware","name":"中间件"},{"value":"api","name":"API"}]},"name":{"name":"名称","required":true,"type":"string"},"--mode":{"name":"模式","type":"radios","options":[{"value":"client","name":"客户端"},{"value":"server","name":"服务器端"}],"if":"(values) => ['component', 'plugin'].includes(values.template)","optionName":"--mode"},"--global":{"name":"全局","type":"check","if":"(values) => ['middleware'].includes(values.template)","optionName":"--global"},"--method":{"name":"方法","type":"radios","options":[{"value":"get","name":"get"},{"value":"post","name":"post"},{"value":"put","name":"put"},{"value":"patch","name":"patch"},{"value":"delete","name":"delete"},{"value":"head","name":"head"},{"value":"options","name":"options"},{"value":"trace","name":"trace"},{"value":"connect","name":"connect"}],"if":"(values) => ['api'].includes(values.template)","optionName":"--method"},"--cwd":{"name":"目标应用程序的目录。","desc":"默认为当前工作目录。","type":"string","optionName":"--cwd"},"--force":{"name":"如果文件已经存在，则强制覆盖。","type":"check","optionName":"--force"}},"filter":"(cmd, values) => cmd + ' ' + values.template + ' ' + values.name"},{"name":"nuxi dev","nameInCMD":"npx nuxi dev","form":{"-p":{"name":"监听的端口","type":"string","optionName":"-p"},"-h":{"name":"服务器的主机名","type":"string","optionName":"-h"},"--https":{"name":"使用自签名证书的https协议进行监听","type":"check","optionName":"--https"},"":{"name":"根目录","desc":"要打包的应用程序的根目录。","type":"string"},"--dotenv":{"name":"环境文件","desc":"指向另一个.env文件以加载，相对于根目录。","type":"string","optionName":"--dotenv"},"--clipboard":{"name":"剪贴板","type":"check","desc":"复制URL到剪贴板。","optionName":"--clipboard"},"-o":{"name":"在浏览器中打开URL","type":"check","optionName":"-o"},"--no-clear":{"name":"启动后不清除控制台","type":"check","optionName":"--no-clear"},"--ssl-cert":{"name":"指定https证书","type":"string","optionName":"--ssl-cert"},"--ssl-key":{"name":"指定https证书的密钥","type":"string","optionName":"--ssl-key"}}},{"name":"build","nameInCMD":"npx nuxi build","desc":"build命令创建一个.output目录，其中包含你的应用程序、服务器和依赖项，准备用于生产。","form":{"--dotenv":{"name":"环境文件","desc":"指向另一个.env文件以加载，相对于根目录。","type":"string","optionName":"--dotenv"},"":{"name":"根目录","desc":"要打包的应用程序的根目录。","type":"string"}}},{"name":"generate","nameInCMD":"npx nuxi generate","desc":"generate命令预渲染应用程序的每个路由，并将结果存储在纯HTML文件中，可以部署在任何静态托管服务上。该命令会触发带有prerender参数设置为true的nuxi build命令。","form":{"--dotenv":{"name":"环境文件","desc":"指向另一个.env文件以加载，相对于根目录。","type":"string","optionName":"--dotenv"},"":{"name":"根目录","desc":"要打包的应用程序的根目录。","type":"string"}}},{"name":"Analyze","nameInCMD":"npx nuxi analyze","desc":"analyze命令构建Nuxt并分析生产包（实验性功能）。","filter":"() => \"npx nuxi analyze\"","form":{}},{"name":"preview","nameInCMD":"npx nuxi preview","desc":"preview命令在运行build命令后启动一个服务器预览Nuxt应用程序。start命令是preview的别名。","form":{"--dotenv":{"name":"环境文件","desc":"指向另一个.env文件以加载，相对于根目录。","type":"string","optionName":"--dotenv"},"":{"name":"根目录","desc":"要打包的应用程序的根目录。","type":"string"}}},{"name":"prepare","nameInCMD":"npx nuxi prepare","desc":"prepare命令在应用程序中创建一个.nuxt目录并生成类型。这在CI环境或作为package.json中的postinstall命令中非常有用。","form":{"":{"name":"根目录","desc":"要打包的应用程序的根目录。","type":"string"}}},{"name":"typecheck","nameInCMD":"npx nuxi typecheck","desc":"typecheck命令运行vue-tsc检查整个应用程序的类型。","form":{"":{"name":"根目录","desc":"要打包的应用程序的根目录。","type":"string"}}},{"name":"upgrade","nameInCMD":"npx nuxi upgrade","desc":"upgrade命令将Nuxt 3升级到最新版本。","form":{"-f":{"name":"升级前删除node_modules和锁定文件。","type":"check","optionName":"-f"}}},{"name":"cleanup","nameInCMD":"npx nuxi cleanup","desc":"cleanup命令删除常见的生成Nuxt文件和缓存。","form":{"":{"name":"根目录","desc":"要打包的应用程序的根目录。","type":"string"}}},{"name":"info","nameInCMD":"npx nuxi info","desc":"info命令记录有关当前或指定Nuxt项目的信息。","form":{}}],"content":"<h2 id=\"例子\">例子</h2>\n<ul>\n<li><pre><code class=\"language-sh\"># 生成 `components/TheHeader.vue`\nnpx nuxi add component TheHeader\n</code></pre>\n</li>\n<li><pre><code class=\"language-sh\"># 生成 `composables/foo.ts`\nnpx nuxi add composable foo\n</code></pre>\n</li>\n</ul>\n"}