{"name":"awk","desc":"awk is a text processing tool that can be used for data extraction, formatting, calculation, and other operations on text. Its command-line syntax is simple and easy to learn and can be widely used in Linux and Unix systems.","usages":[{"form":{"":{"name":"file path","required":true,"type":"string"},"-F":{"type":"string","name":"Specify the field separator","optionName":"-F"},"-f":{"type":"string","name":"Specify the script file","optionName":"-f"},"-v":{"type":"string","name":"Define variable","optionName":"-v"},"-V":{"type":"check","name":"Display version information and exit","optionName":"-V"},"-W":{"type":"check","name":"Print warning information","optionName":"-W"},"-":{"type":"check","name":"Read from standard input","optionName":"-"}}}],"content":"<h2 id=\"example\">Example</h2>\n<p>awk is a text processing tool commonly used for:</p>\n<ol>\n<li>Extracting data from files and manipulating it according to field separators.</li>\n<li>Using awk in shell scripts for conditional statements and flow control.</li>\n<li>Combining awk with other shell tools (such as sed and grep) to perform more complex text processing tasks.</li>\n<li>Formatting and calculating data with awk, such as generating reports or calculating totals, averages, etc. in files.</li>\n<li>Filtering data with awk, such as extracting only certain data from files based on specific conditions or deleting certain lines from files.</li>\n</ol>\n<p>Common awk commands include:</p>\n<ul>\n<li><code>awk -F&quot;separator&quot; &#39;{print $1}&#39; filename</code>: Split the contents of the file according to the specified separator and output the first field of each line.</li>\n<li><code>awk &#39;/match rule/{print $0}&#39; filename</code>: Find the lines in the file that match the specified rule and output the entire contents of these lines.</li>\n<li><code>awk &#39;{total += $1} END {print total}&#39; filename</code>: Calculate the sum of the first column of numbers in the file and output the result.</li>\n<li><code>awk &#39;{if ($1 &gt; 10) print $0; else print &quot;Less than or equal to 10&quot;}&#39; filename</code>: Output the lines in the file where the first column of numbers is greater than 10; otherwise, output &quot;Less than or equal to 10&quot;.</li>\n<li><code>awk &#39;NR &gt; 1&#39; filename</code>: Output all lines in the file except the first one.</li>\n</ul>\n<pre><code class=\"language-text\">\n</code></pre>\n"}