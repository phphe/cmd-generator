{"name":"sed","desc":"`sed` is a popular text processing tool. It can be used to edit and transform text within text files, and supports a wide range of regular expression matching and substitution functionality.","usages":[{"form":{"pattern":{"name":"expression","required":true,"desc":"For example: s/original text/replacement text/g","type":"string"},"":{"name":"file path","required":true,"type":"string"},"-e":{"type":"string","name":"execute script","optionName":"-e"},"-f":{"type":"string","name":"read script from file","optionName":"-f"},"-h":{"type":"check","name":"display help information","optionName":"-h"},"-n":{"type":"check","name":"suppress default output","optionName":"-n"},"-V":{"type":"check","name":"display version number and exit","optionName":"-V"},"-i":{"type":"check","name":"edit files in place","optionName":"-i"},"-r":{"type":"check","name":"use extended regular expressions","optionName":"-r"},"-s":{"type":"check","name":"handle binary data","optionName":"-s"}},"optionsPartFilter":"(cmd, values) => cmd + ' \\'' + values.pattern + '\\''"}],"content":"<h2 id=\"examples\">Examples</h2>\n<ol>\n<li>Replace text within a file:</li>\n</ol>\n<pre><code class=\"language-vb.net\">sed &#39;s/original text/replacement text/g&#39; file.txt\n</code></pre>\n<ol>\n<li>Display only odd-numbered lines:</li>\n</ol>\n<pre><code class=\"language-vb.net\">sed -n &#39;1~2p&#39; file.txt\n</code></pre>\n<ol>\n<li>Delete a specified line within a file:</li>\n</ol>\n<pre><code class=\"language-vb.net\">sed -i &#39;2d&#39; file.txt\n</code></pre>\n<ol>\n<li>Display lines within a file that match a pattern:</li>\n</ol>\n<pre><code class=\"language-vb.net\">sed -n &#39;/pattern/p&#39; file.txt\n</code></pre>\n<ol>\n<li>Display lines within a file that do not match a pattern:</li>\n</ol>\n<pre><code class=\"language-vb.net\">sed -n &#39;/pattern/!p&#39; file.txt\n</code></pre>\n<ol>\n<li>Display all lines from a file starting from line n:</li>\n</ol>\n<pre><code class=\"language-vb.net\">sed -n &#39;n,$p&#39; file.txt\n</code></pre>\n<ol>\n<li>Insert a new line before line n of a file:</li>\n</ol>\n<pre><code class=\"language-vb.net\">sed -i &#39;n i new line&#39; file.txt\n</code></pre>\n<ol>\n<li>Insert a new line after line n of a file:</li>\n</ol>\n<pre><code class=\"language-vb.net\">sed -i &#39;n a new line&#39; file.txt\n</code></pre>\n<ol>\n<li>Delete lines within a file that match a pattern:</li>\n</ol>\n<pre><code class=\"language-vb.net\">sed -i &#39;/pattern/d&#39; file.txt\n</code></pre>\n<ol>\n<li>Replace all occurrences of text within a file with new text:</li>\n</ol>\n<pre><code class=\"language-vb.net\">sed -i &#39;s/original text/new text/g&#39; file.txt\n</code></pre>\n<h2 id=\"understanding-the--i-option\">Understanding the -i Option</h2>\n<p>When the <strong><code>sed</code></strong> command is used with the <strong><code>-i</code></strong> option, <strong><code>sed</code></strong> will create a backup file of the original file being edited with the extension you provide. Then, <strong><code>sed</code></strong> will write the modified content to the original file, effectively modifying the file in place.</p>\n<p>For example, suppose there is a file named <strong><code>example.txt</code></strong>, and you want to use <strong><code>sed</code></strong> to edit the file and create a backup file during the modification process. You can use the following command:</p>\n<pre><code class=\"language-shell\">sed -i.bak &#39;s/foo/bar/g&#39; example.txt\n</code></pre>\n<p>In this command, <strong><code>-i.bak</code></strong> indicates that a backup file named <strong><code>example.txt.bak</code></strong> will be created during the editing process, and <strong><code>&#39;s/foo/bar/g&#39;</code></strong> indicates that all occurrences of &quot;foo&quot; within the file should be replaced with &quot;bar&quot;. This operation will modify the <strong><code>example.txt</code></strong> file directly, and backup the original content to <strong><code>example.txt.bak</code></strong>.</p>\n<p>Note that while the <strong><code>-i</code></strong> option can be a convenient way to perform editing operations, it should be used with caution, especially when working with important files. Careless use of the <strong><code>-i</code></strong> option can result in data loss or irreversible changes. When using the <strong><code>-i</code></strong> option, it is recommended to backup important files beforehand so that you can revert to the previous state if necessary.</p>\n"}